var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddService.html",[0,0.14,1,0.898]],["body/interfaces/AddService.html",[0,0.249,1,1.388,2,0.792,3,0.589,4,0.589,5,0.5,6,1.044,7,0.418,8,1.612,9,2.5,10,1.612,11,1.778,12,1.044,13,2.756,14,1.196,15,0.053,16,0.911,17,0.589,18,1.196,19,1.196,20,1.044,21,1.872,22,0.589,23,0.911,24,1.034,25,1.227,26,0.792,27,0.911,28,1.196,29,0.792,30,1.227,31,1.196,32,1.227,33,1.196,34,0.792,35,0.911,36,0.036,37,0.036]],["title/components/AppComponent.html",[38,1.355,39,1.566]],["body/components/AppComponent.html",[3,0.602,4,0.602,5,0.511,15,0.052,16,1.246,22,0.806,24,0.602,36,0.037,37,0.037,38,2.118,39,2.614,40,2.538,41,2.262,42,2.262,43,2.262,44,2.262,45,3.644,46,3.644,47,2.172,48,3.027,49,2.538,50,3.027,51,2.614,52,3.027,53,1.404,54,2.818,55,1.896,56,2.262,57,3.027,58,3.027,59,2.262,60,3.644,61,2.262,62,2.262,63,2.262,64,2.262,65,2.262]],["title/components/CountriesComponent.html",[38,1.355,51,1.566]],["body/components/CountriesComponent.html",[3,0.323,4,0.323,5,0.275,7,0.23,8,1.038,12,1.276,14,0.657,15,0.054,16,1.212,17,0.511,18,0.657,19,1.038,20,0.906,22,0.72,24,0.323,36,0.023,37,0.023,38,1.478,39,0.872,40,1.61,41,1.215,42,1.215,44,1.215,45,2.705,46,2.705,48,1.92,49,2.267,50,1.92,51,1.94,52,1.215,53,0.754,55,1.019,56,1.215,57,1.92,58,1.92,59,1.215,60,2.705,61,1.215,62,1.215,63,2.381,64,1.215,65,1.215,66,1.215,67,2.392,68,2.392,69,2.966,70,2.392,71,2.392,72,2.392,73,2.392,74,1.038,75,2.381,76,1.94,77,2.946,78,3.37,79,2.392,80,1.514,81,2.392,82,2.392,83,3.37,84,1.514,85,1.514,86,1.61,87,2.392,88,1.514,89,1.514,90,2.966,91,2.392,92,2.392,93,1.377,94,1.61,95,2.392,96,4.859,97,1.61,98,1.92,99,1.92,100,1.92,101,1.92,102,1.92,103,1.92,104,1.514,105,1.514,106,1.019,107,1.92,108,1.215,109,1.514,110,1.514,111,1.514,112,1.514,113,1.514,114,1.514,115,1.514,116,1.514,117,1.514,118,1.514]],["title/injectables/CountriesService.html",[119,1.566,120,1.355]],["body/injectables/CountriesService.html",[3,0.438,4,0.438,5,0.372,7,0.311,9,2.406,12,1.72,15,0.054,19,2.128,21,1.142,22,0.898,23,0.677,24,0.438,26,1.028,29,0.589,34,0.866,36,0.029,37,0.029,47,1.18,53,1.021,55,1.379,74,1.308,75,2.871,86,2.957,97,1.379,106,1.379,119,1.736,120,1.502,121,2.049,122,1.645,123,2.406,124,2.871,125,3.576,126,3.943,127,2.406,128,3.015,129,3.576,130,2.049,131,2.049,132,2.049,133,2.049,134,3.015,135,2.049,136,2.049,137,2.049,138,2.049,139,2.049,140,2.049,141,1.965,142,1.645,143,1.379,144,2.049,145,1.379,146,2.049,147,2.049,148,2.049,149,2.049,150,2.049,151,2.049]],["title/interfaces/CountriesState.html",[0,0.14,152,1.566]],["body/interfaces/CountriesState.html",[0,0.108,2,0.601,3,0.447,4,0.447,5,0.379,7,0.317,15,0.054,17,0.773,22,0.905,24,0.653,26,0.879,29,0.601,35,1.01,36,0.03,37,0.03,47,1.204,53,1.042,74,1.327,76,1.204,93,1.761,94,2.978,106,1.406,120,1.524,141,1.042,142,1.678,143,1.406,145,1.406,152,2.083,153,1.406,154,2.904,155,2.058,156,2.455,157,2.455,158,2.455,159,2.455,160,2.09,161,2.09,162,1.678,163,2.058,164,1.406,165,2.09,166,2.09,167,2.455,168,2.455,169,2.904,170,2.09,171,2.904,172,1.406,173,2.455,174,1.678,175,1.678,176,1.678,177,1.678,178,2.904,179,1.678,180,2.455,181,1.678,182,1.678,183,1.678,184,1.678,185,1.678,186,1.678,187,1.678,188,1.678,189,1.678,190,1.678]],["title/interfaces/CountryModel.html",[0,0.14,141,1.355]],["body/interfaces/CountryModel.html",[0,0.138,2,0.769,3,0.571,4,0.571,5,0.485,7,0.406,15,0.051,16,1.468,17,1.048,22,0.571,24,0.571,29,1.497,35,1.203,36,0.036,37,0.036,74,1.58,98,3.567,99,3.567,100,3.567,101,3.567,102,3.567,103,3.567,141,1.814,191,2.147,192,3.323,193,5.063,194,2.675]],["title/interfaces/DeleteService.html",[0,0.14,32,0.898]],["body/interfaces/DeleteService.html",[0,0.249,1,1.227,2,0.792,3,0.589,4,0.589,5,0.5,6,1.044,7,0.418,8,1.612,10,1.196,11,1.778,12,1.044,14,1.196,15,0.053,16,0.911,17,0.589,18,1.196,19,1.196,20,1.044,21,1.872,22,0.589,23,0.911,24,1.034,25,1.227,26,0.792,27,0.911,28,1.196,29,0.792,30,1.227,31,1.196,32,1.388,33,1.612,34,0.792,35,0.911,36,0.036,37,0.036,123,2.5,195,2.756]],["title/interfaces/GetByIdService.html",[0,0.14,27,0.898]],["body/interfaces/GetByIdService.html",[0,0.249,1,1.227,2,0.792,3,0.589,4,0.589,5,0.5,6,1.044,7,0.418,8,1.612,10,1.196,11,1.592,12,1.044,14,1.196,15,0.053,16,0.911,17,0.589,18,1.196,20,1.044,21,1.872,22,0.589,23,0.911,24,1.034,25,1.227,26,0.792,27,1.227,28,1.612,29,1.208,30,1.227,31,1.196,32,1.227,33,1.196,34,0.792,35,0.911,36,0.036,37,0.036,97,1.855,124,2.983,196,2.756]],["title/interfaces/GetService.html",[0,0.14,25,0.898]],["body/interfaces/GetService.html",[0,0.252,1,1.257,2,0.821,3,0.61,4,0.61,5,0.518,6,1.082,7,0.433,8,1.651,10,1.239,11,1.62,12,1.082,15,0.053,20,1.082,21,1.889,22,0.61,23,0.943,24,1.044,25,1.414,26,1.311,27,0.943,28,1.239,29,0.821,30,1.257,31,1.239,32,1.257,33,1.239,34,0.821,35,0.943,36,0.037,37,0.037,197,2.856]],["title/interfaces/ServiceBase.html",[0,0.14,34,0.782]],["body/interfaces/ServiceBase.html",[0,0.254,1,1.433,2,0.844,3,0.627,4,0.627,5,0.533,6,1.112,10,1.274,11,1.643,15,0.053,21,1.865,22,0.627,23,0.97,24,1.052,25,1.433,26,0.844,27,0.97,28,1.274,29,0.844,30,1.433,31,1.274,32,1.433,33,1.274,34,1.114,35,1.28,36,0.038,37,0.038]],["title/interfaces/UpdateService.html",[0,0.14,30,0.898]],["body/interfaces/UpdateService.html",[0,0.249,1,1.227,2,0.792,3,0.589,4,0.589,5,0.5,6,1.044,7,0.418,8,1.612,10,1.196,11,1.778,12,1.044,14,1.196,15,0.053,16,0.911,17,0.589,18,1.196,19,1.196,20,1.044,21,1.872,22,0.589,23,0.911,24,1.034,25,1.227,26,0.792,27,0.911,28,1.196,29,0.792,30,1.388,31,1.612,32,1.227,33,1.196,34,0.792,35,0.911,36,0.036,37,0.036,127,2.5,198,2.756]],["title/coverage.html",[199,2.956]],["body/coverage.html",[0,0.248,1,0.755,5,0.415,6,1.728,15,0.052,17,0.489,25,0.755,27,0.755,30,0.755,32,0.755,34,0.657,36,0.032,37,0.032,38,1.627,39,1.317,43,1.836,51,1.317,66,1.836,76,1.317,119,1.317,120,1.14,122,1.836,141,1.14,152,1.317,153,2.561,163,1.539,164,1.539,172,1.539,191,1.836,199,1.836,200,2.287,201,2.287,202,2.287,203,5.284,204,4.959,205,1.836,206,4.389,207,1.836,208,4.564,209,3.055,210,3.055,211,3.806,212,1.836,213,1.836,214,1.836,215,1.836,216,1.836,217,2.287,218,2.287,219,2.287,220,2.287,221,2.287,222,2.287]],["title/dependencies.html",[223,1.835,224,2.619]],["body/dependencies.html",[15,0.053,23,0.974,36,0.038,37,0.038,53,1.47,77,2.368,107,2.368,108,2.368,162,2.368,224,2.368,225,2.95,226,5.213,227,2.95,228,2.95,229,2.95,230,2.95,231,2.95,232,3.887,233,3.887,234,2.95,235,2.95,236,2.95,237,2.95,238,2.95,239,4.348,240,2.95,241,2.95,242,2.95,243,2.95,244,2.95,245,2.95,246,2.95,247,2.95,248,2.95,249,2.95]],["title/miscellaneous/functions.html",[250,0.992,251,2.619]],["body/miscellaneous/functions.html",[7,0.491,11,1.226,14,1.973,15,0.051,16,1.502,17,0.971,18,1.973,20,1.721,36,0.04,37,0.04,155,2.178,209,2.599,210,3.844,212,3.315,213,3.315,214,3.315,250,1.405,251,2.599,252,4.546,253,3.237,254,3.237,255,3.237,256,3.237,257,3.237]],["title/index.html",[7,0.413,258,2.183]],["body/index.html",[2,1.155,15,0.046,36,0.046,37,0.046,40,2.705,93,2.315,119,2.315,258,3.228,259,4.021,260,4.021]],["title/modules.html",[261,2.956]],["body/modules.html",[15,0.047,36,0.047,37,0.047,261,3.356]],["title/properties.html",[74,1.416,223,1.835]],["body/properties.html",[15,0.049,36,0.047,37,0.047,74,1.779,262,4.099,263,4.099]],["title/miscellaneous/typealiases.html",[250,0.992,264,3.263]],["body/miscellaneous/typealiases.html",[7,0.577,15,0.045,17,1.044,36,0.045,37,0.045,154,3.662,155,3.069,192,3.662,250,1.65,265,3.803,266,3.803,267,3.803,268,3.803,269,3.803]],["title/miscellaneous/variables.html",[250,0.992,270,2.619]],["body/miscellaneous/variables.html",[7,0.325,9,0.889,15,0.054,17,0.732,19,1.487,26,0.778,36,0.021,37,0.021,47,0.76,49,2.097,76,1.235,86,2.306,93,1.235,94,1.443,120,0.658,123,0.889,127,0.889,143,0.889,145,2.306,152,0.76,153,0.889,156,1.721,157,1.06,158,1.721,159,1.06,163,1.821,164,1.443,167,1.06,168,1.06,169,1.721,171,2.173,172,1.443,173,3.234,174,3.343,175,2.751,176,1.06,177,1.06,178,2.173,179,1.06,180,1.721,181,1.06,182,1.06,183,1.06,184,1.06,185,1.06,186,1.06,187,1.06,188,1.06,189,1.06,190,1.06,205,1.06,207,1.721,215,1.06,216,1.06,250,0.573,270,1.06,271,1.32,272,2.144,273,1.32,274,1.32,275,1.32,276,1.32,277,1.32,278,2.144,279,2.144,280,1.32,281,1.32,282,1.32,283,1.32,284,1.32,285,1.32,286,3.116,287,1.32,288,1.32,289,1.32,290,1.32,291,4.465,292,1.32,293,1.32,294,3.116,295,3.116,296,3.116,297,3.116,298,3.116,299,1.32,300,1.32,301,2.144,302,2.144,303,2.144,304,1.32,305,2.144,306,2.144,307,1.32,308,2.144,309,2.144,310,1.32,311,1.32,312,1.32]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":203,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":263,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":249,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":204,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":208,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":217,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":219,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":218,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":93,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountriesState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1.1.25",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["1.13.12",{"_index":244,"title":{},"body":{"dependencies.html":{}}}],["18.0.2",{"_index":239,"title":{},"body":{"dependencies.html":{}}}],["18.1.1",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":259,"title":{},"body":{"index.html":{}}}],["2.3.0",{"_index":247,"title":{},"body":{"dependencies.html":{}}}],["32.2.1",{"_index":241,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":245,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":260,"title":{},"body":{"index.html":{}}}],["a.name.localecompare(b.name",{"_index":184,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":128,"title":{},"body":{"injectables/CountriesService.html":{}}}],["actual_component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["addeditem",{"_index":301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["additem",{"_index":9,"title":{},"body":{"interfaces/AddService.html":{},"injectables/CountriesService.html":{},"miscellaneous/variables.html":{}}}],["additem(value",{"_index":10,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["addservice",{"_index":1,"title":{"interfaces/AddService.html":{}},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["ag",{"_index":107,"title":{},"body":{"components/CountriesComponent.html":{},"dependencies.html":{}}}],["aggridangular",{"_index":69,"title":{},"body":{"components/CountriesComponent.html":{}}}],["aliases",{"_index":265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allitems",{"_index":306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allitems.findindex((x",{"_index":307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allitems[index",{"_index":310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":108,"title":{},"body":{"components/CountriesComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":139,"title":{},"body":{"injectables/CountriesService.html":{}}}],["angular/compiler",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["apiurl",{"_index":129,"title":{},"body":{"injectables/CountriesService.html":{}}}],["app",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["appcomponent",{"_index":39,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":207,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asc",{"_index":169,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["automock",{"_index":212,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["automock(obj",{"_index":253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b",{"_index":183,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":117,"title":{},"body":{"components/CountriesComponent.html":{}}}],["browser",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["capital",{"_index":101,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{}}}],["changedetection",{"_index":67,"title":{},"body":{"components/CountriesComponent.html":{}}}],["changedetectionstrategy",{"_index":105,"title":{},"body":{"components/CountriesComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":68,"title":{},"body":{"components/CountriesComponent.html":{}}}],["class",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{}}}],["coldef",{"_index":109,"title":{},"body":{"components/CountriesComponent.html":{}}}],["columndefs",{"_index":95,"title":{},"body":{"components/CountriesComponent.html":{}}}],["community",{"_index":110,"title":{},"body":{"components/CountriesComponent.html":{}}}],["compodoc/compodoc",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":38,"title":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["components",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"index.html":{}}}],["computed",{"_index":156,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["console.error",{"_index":297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('on",{"_index":189,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["const",{"_index":171,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["core/base/entity.base",{"_index":194,"title":{},"body":{"interfaces/CountryModel.html":{}}}],["core/base/service.base",{"_index":140,"title":{},"body":{"injectables/CountriesService.html":{}}}],["core/store",{"_index":165,"title":{},"body":{"interfaces/CountriesState.html":{}}}],["count",{"_index":280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["countries",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["countries.component.html",{"_index":71,"title":{},"body":{"components/CountriesComponent.html":{}}}],["countries.component.scss",{"_index":73,"title":{},"body":{"components/CountriesComponent.html":{}}}],["countries.model",{"_index":142,"title":{},"body":{"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{}}}],["countries.service",{"_index":166,"title":{},"body":{"interfaces/CountriesState.html":{}}}],["countries/countries.component",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["countriescomponent",{"_index":51,"title":{"components/CountriesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"coverage.html":{}}}],["countriesservice",{"_index":120,"title":{"injectables/CountriesService.html":{}},"body":{"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countriesstate",{"_index":152,"title":{"interfaces/CountriesState.html":{}},"body":{"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countriesstore",{"_index":76,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countrymodel",{"_index":141,"title":{"interfaces/CountryModel.html":{}},"body":{"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"coverage.html":{}}}],["coverage",{"_index":199,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currency",{"_index":102,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{}}}],["dataservicetype",{"_index":282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debouncetime(300",{"_index":288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"miscellaneous/variables.html":{}}}],["defaultcoldef",{"_index":91,"title":{},"body":{"components/CountriesComponent.html":{}}}],["defined",{"_index":12,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/UpdateService.html":{}}}],["deleteitem",{"_index":123,"title":{},"body":{"injectables/CountriesService.html":{},"interfaces/DeleteService.html":{},"miscellaneous/variables.html":{}}}],["deleteitem(value",{"_index":33,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["deleteservice",{"_index":32,"title":{"interfaces/DeleteService.html":{}},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["density",{"_index":100,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{}}}],["dependencies",{"_index":224,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["desc",{"_index":170,"title":{},"body":{"interfaces/CountriesState.html":{}}}],["destroy",{"_index":190,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["direction",{"_index":180,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["directives",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["distinctuntilchanged",{"_index":289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid(\"filter",{"_index":115,"title":{},"body":{"components/CountriesComponent.html":{}}}],["documentation",{"_index":200,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["dynamic",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["entitybase",{"_index":192,"title":{},"body":{"interfaces/CountryModel.html":{},"miscellaneous/typealiases.html":{}}}],["error",{"_index":296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["extends",{"_index":35,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["false",{"_index":175,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":96,"title":{},"body":{"components/CountriesComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["filter",{"_index":94,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["filter.order",{"_index":181,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["finalize",{"_index":298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":103,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{}}}],["flex",{"_index":92,"title":{},"body":{"components/CountriesComponent.html":{}}}],["function",{"_index":211,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":251,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getapiurl",{"_index":137,"title":{},"body":{"injectables/CountriesService.html":{}}}],["getbyidservice",{"_index":27,"title":{"interfaces/GetByIdService.html":{}},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["getitem",{"_index":124,"title":{},"body":{"injectables/CountriesService.html":{},"interfaces/GetByIdService.html":{}}}],["getitem(id",{"_index":28,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["getitems",{"_index":26,"title":{},"body":{"interfaces/AddService.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["getservice",{"_index":25,"title":{"interfaces/GetService.html":{}},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["grid",{"_index":77,"title":{},"body":{"components/CountriesComponent.html":{},"dependencies.html":{}}}],["gridapi",{"_index":90,"title":{},"body":{"components/CountriesComponent.html":{}}}],["gridreadyevent",{"_index":83,"title":{},"body":{"components/CountriesComponent.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["htmlinputelement).value",{"_index":118,"title":{},"body":{"components/CountriesComponent.html":{}}}],["httpclient",{"_index":126,"title":{},"body":{"injectables/CountriesService.html":{}}}],["https://freetestapi.com/api/v1/countries",{"_index":146,"title":{},"body":{"injectables/CountriesService.html":{}}}],["icons",{"_index":243,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":97,"title":{},"body":{"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/GetByIdService.html":{}}}],["identifier",{"_index":201,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":144,"title":{},"body":{"injectables/CountriesService.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["imports",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["initialstate",{"_index":172,"title":{},"body":{"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":106,"title":{},"body":{"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{}}}],["inject(countriesservice",{"_index":186,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["inject(countriesstore",{"_index":87,"title":{},"body":{"components/CountriesComponent.html":{}}}],["inject(dataservicetype",{"_index":285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(httpclient",{"_index":134,"title":{},"body":{"injectables/CountriesService.html":{}}}],["injectable",{"_index":119,"title":{"injectables/CountriesService.html":{}},"body":{"injectables/CountriesService.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":121,"title":{},"body":{"injectables/CountriesService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}},"body":{"interfaces/AddService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"index.html":{}}}],["isloading",{"_index":174,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["item.id",{"_index":309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":173,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["items().length",{"_index":281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items().tosorted((a",{"_index":182,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["land_area",{"_index":99,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["literal",{"_index":155,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":37,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":242,"title":{},"body":{"dependencies.html":{}}}],["metadata",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/UpdateService.html":{}}}],["miscellaneous",{"_index":250,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock.ts",{"_index":210,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modules",{"_index":261,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":220,"title":{},"body":{"coverage.html":{}}}],["next",{"_index":295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx/operators",{"_index":238,"title":{},"body":{"dependencies.html":{}}}],["ngrx/signals",{"_index":162,"title":{},"body":{"interfaces/CountriesState.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":240,"title":{},"body":{"dependencies.html":{}}}],["number",{"_index":193,"title":{},"body":{"interfaces/CountryModel.html":{}}}],["obj",{"_index":254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":89,"title":{},"body":{"components/CountriesComponent.html":{}}}],["observable",{"_index":21,"title":{},"body":{"interfaces/AddService.html":{},"injectables/CountriesService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["ondestroy",{"_index":188,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["onfiltertextboxchanged",{"_index":78,"title":{},"body":{"components/CountriesComponent.html":{}}}],["ongridready",{"_index":79,"title":{},"body":{"components/CountriesComponent.html":{}}}],["ongridready(params",{"_index":82,"title":{},"body":{"components/CountriesComponent.html":{}}}],["oninit",{"_index":187,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["opcional/custom",{"_index":178,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":18,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":168,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["overridemock",{"_index":213,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overridemock(type",{"_index":255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":258,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":223,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":14,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":85,"title":{},"body":{"components/CountriesComponent.html":{}}}],["params.api",{"_index":113,"title":{},"body":{"components/CountriesComponent.html":{}}}],["patchstate(store",{"_index":291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["population",{"_index":98,"title":{},"body":{"components/CountriesComponent.html":{},"interfaces/CountryModel.html":{}}}],["private",{"_index":125,"title":{},"body":{"injectables/CountriesService.html":{}}}],["properties",{"_index":74,"title":{"properties.html":{}},"body":{"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"properties.html":{}}}],["providedin",{"_index":143,"title":{},"body":{"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providemock",{"_index":214,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["providemock(type",{"_index":256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provider",{"_index":257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providers",{"_index":276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":167,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":75,"title":{},"body":{"components/CountriesComponent.html":{},"injectables/CountriesService.html":{}}}],["results",{"_index":36,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":145,"title":{},"body":{"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":20,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["rxjs",{"_index":23,"title":{},"body":{"interfaces/AddService.html":{},"injectables/CountriesService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"dependencies.html":{}}}],["rxmethod",{"_index":286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selector",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["service",{"_index":284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service.additem(value).pipe",{"_index":300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service.deleteitem(item).pipe",{"_index":311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service.getitems().pipe",{"_index":293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["service.updateitem(item).pipe",{"_index":304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["servicebase",{"_index":34,"title":{"interfaces/ServiceBase.html":{}},"body":{"interfaces/AddService.html":{},"injectables/CountriesService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["signalstore",{"_index":157,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["signalstorefeature",{"_index":278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sorted",{"_index":179,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddService.html":{},"components/AppComponent.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["src/.../app.config.ts",{"_index":271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auto",{"_index":252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../countries.store.ts",{"_index":272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entity.base.ts",{"_index":266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../store.base.computed.ts",{"_index":273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../store.base.methods.ts",{"_index":274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../store.base.state.ts",{"_index":267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":205,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/base/entity.base.ts",{"_index":268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/core/base/service.base.ts",{"_index":6,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["src/app/core/base/service.base.ts:12",{"_index":13,"title":{},"body":{"interfaces/AddService.html":{}}}],["src/app/core/base/service.base.ts:16",{"_index":198,"title":{},"body":{"interfaces/UpdateService.html":{}}}],["src/app/core/base/service.base.ts:20",{"_index":195,"title":{},"body":{"interfaces/DeleteService.html":{}}}],["src/app/core/base/service.base.ts:4",{"_index":197,"title":{},"body":{"interfaces/GetService.html":{}}}],["src/app/core/base/service.base.ts:8",{"_index":196,"title":{},"body":{"interfaces/GetByIdService.html":{}}}],["src/app/core/mock/auto",{"_index":209,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/store/store.base.computed.ts",{"_index":215,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/store.base.methods.ts",{"_index":216,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/store/store.base.state.ts",{"_index":269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/countries/countries.component.ts",{"_index":66,"title":{},"body":{"components/CountriesComponent.html":{},"coverage.html":{}}}],["src/app/countries/countries.component.ts:16",{"_index":88,"title":{},"body":{"components/CountriesComponent.html":{}}}],["src/app/countries/countries.component.ts:18",{"_index":104,"title":{},"body":{"components/CountriesComponent.html":{}}}],["src/app/countries/countries.component.ts:36",{"_index":84,"title":{},"body":{"components/CountriesComponent.html":{}}}],["src/app/countries/countries.component.ts:40",{"_index":80,"title":{},"body":{"components/CountriesComponent.html":{}}}],["src/app/countries/countries.model.ts",{"_index":191,"title":{},"body":{"interfaces/CountryModel.html":{},"coverage.html":{}}}],["src/app/countries/countries.service.ts",{"_index":122,"title":{},"body":{"injectables/CountriesService.html":{},"coverage.html":{}}}],["src/app/countries/countries.service.ts:10",{"_index":135,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/countries.service.ts:11",{"_index":138,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/countries.service.ts:13",{"_index":133,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/countries.service.ts:14",{"_index":132,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/countries.service.ts:15",{"_index":130,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/countries.service.ts:16",{"_index":136,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/countries.service.ts:17",{"_index":131,"title":{},"body":{"injectables/CountriesService.html":{}}}],["src/app/countries/store/countries.store.ts",{"_index":153,"title":{},"body":{"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["state",{"_index":279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":202,"title":{},"body":{"coverage.html":{}}}],["store.items",{"_index":302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.items().filter((x",{"_index":312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store/countries.store",{"_index":111,"title":{},"body":{"components/CountriesComponent.html":{}}}],["storebasestate",{"_index":154,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":29,"title":{},"body":{"interfaces/AddService.html":{},"injectables/CountriesService.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["styleurl",{"_index":72,"title":{},"body":{"components/CountriesComponent.html":{}}}],["switchmap",{"_index":292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap((item",{"_index":303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap((value",{"_index":299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":11,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"miscellaneous/functions.html":{}}}],["table",{"_index":222,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":221,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tapresponse",{"_index":294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["templateurl",{"_index":70,"title":{},"body":{"components/CountriesComponent.html":{}}}],["text",{"_index":116,"title":{},"body":{"components/CountriesComponent.html":{}}}],["this.grid.gridapi",{"_index":112,"title":{},"body":{"components/CountriesComponent.html":{}}}],["this.grid.gridapi.setgridoption(\"quickfiltertext",{"_index":114,"title":{},"body":{"components/CountriesComponent.html":{}}}],["this.httpclient.delete(`${this.apiurl}/${value.id",{"_index":151,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.httpclient.get(`${this.apiurl}/${id",{"_index":148,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.httpclient.get(this.apiurl",{"_index":147,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.httpclient.post(this.apiurl",{"_index":149,"title":{},"body":{"injectables/CountriesService.html":{}}}],["this.httpclient.put(`${this.apiurl}/${value.id",{"_index":150,"title":{},"body":{"injectables/CountriesService.html":{}}}],["tree",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["true",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":246,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"interfaces/CountriesState.html":{},"interfaces/CountryModel.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/UpdateService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":264,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["updateditem",{"_index":305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateitem",{"_index":127,"title":{},"body":{"injectables/CountriesService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["updateitem(value",{"_index":31,"title":{},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{}}}],["updateservice",{"_index":30,"title":{"interfaces/UpdateService.html":{}},"body":{"interfaces/AddService.html":{},"interfaces/DeleteService.html":{},"interfaces/GetByIdService.html":{},"interfaces/GetService.html":{},"interfaces/ServiceBase.html":{},"interfaces/UpdateService.html":{},"coverage.html":{}}}],["value",{"_index":19,"title":{},"body":{"interfaces/AddService.html":{},"components/CountriesComponent.html":{},"injectables/CountriesService.html":{},"interfaces/DeleteService.html":{},"interfaces/UpdateService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CountriesComponent.html":{}}}],["variable",{"_index":206,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":270,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":262,"title":{},"body":{"properties.html":{}}}],["void",{"_index":81,"title":{},"body":{"components/CountriesComponent.html":{}}}],["withcomputed",{"_index":158,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["withhooks",{"_index":159,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["withmethods",{"_index":160,"title":{},"body":{"interfaces/CountriesState.html":{}}}],["withmethods(((store",{"_index":185,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["withmethods((store",{"_index":283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withstate",{"_index":161,"title":{},"body":{"interfaces/CountriesState.html":{}}}],["withstate(initialstate",{"_index":176,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["withstorecomputed",{"_index":163,"title":{},"body":{"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["withstoremethods",{"_index":164,"title":{},"body":{"interfaces/CountriesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["withstoremethods(countriesservice",{"_index":177,"title":{},"body":{"interfaces/CountriesState.html":{},"miscellaneous/variables.html":{}}}],["x.id",{"_index":308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":248,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddService.html":{"url":"interfaces/AddService.html","title":"interface - AddService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/base/service.base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/base/service.base.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface GetService {\n  getItems(): Observable;\n}\n\nexport interface GetByIdService {\n  getItem(id: string): Observable;\n}\n\nexport interface AddService {\n  addItem(value: T): Observable;\n}\n\nexport interface UpdateService {\n  updateItem(value: T): Observable;\n}\n\nexport interface DeleteService {\n  deleteItem(value: T): Observable;\n}\n\nexport interface ServiceBase extends GetService, AddService, UpdateService, DeleteService {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CountriesComponent\n                \n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { CountriesComponent } from './countries/countries.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CountriesComponent],\n  template: ``,\n})\nexport class AppComponent {\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesComponent', 'selector': 'app-countries'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountriesComponent.html":{"url":"components/CountriesComponent.html","title":"component - CountriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CountriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/countries/countries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-countries\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            AgGridAngular\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./countries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./countries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                countriesStore\n                            \n                            \n                                GRID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFilterTextBoxChanged\n                            \n                            \n                                onGridReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterTextBoxChanged\n                        \n                    \n                \n            \n            \n                \nonFilterTextBoxChanged()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/countries/countries.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onGridReady\n                        \n                    \n                \n            \n            \n                \nonGridReady(params: GridReadyEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/countries/countries.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                        GridReadyEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        countriesStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(CountriesStore)\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GRID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    gridApi: {},\n    defaultColDef: {\n      flex: 1,\n      filter: true,\n    },\n    columnDefs: [\n      { field: \"id\" },\n      { field: \"name\" },\n      { field: \"population\" },\n      { field: \"land_area\" },\n      { field: \"density\" },\n      { field: \"capital\" },\n      { field: \"currency\" },\n      { field: \"flag\" },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, inject } from '@angular/core';\nimport { AgGridAngular } from 'ag-grid-angular';\nimport { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';\n\nimport { CountriesStore } from './store/countries.store';\n\n@Component({\n  selector: 'app-countries',\n  standalone: true,\n  templateUrl: './countries.component.html',\n  styleUrl: './countries.component.scss',\n  imports: [AgGridAngular],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountriesComponent {\n  readonly countriesStore = inject(CountriesStore);\n\n  GRID = {\n    gridApi: {},\n    defaultColDef: {\n      flex: 1,\n      filter: true,\n    },\n    columnDefs: [\n      { field: \"id\" },\n      { field: \"name\" },\n      { field: \"population\" },\n      { field: \"land_area\" },\n      { field: \"density\" },\n      { field: \"capital\" },\n      { field: \"currency\" },\n      { field: \"flag\" },\n    ],\n  };\n\n  onGridReady(params: GridReadyEvent) {\n    this.GRID.gridApi = params.api;\n  }\n\n  onFilterTextBoxChanged() {\n    this.GRID.gridApi.setGridOption(\"quickFilterText\",\n      (document.getElementById(\"filter-text-box\") as HTMLInputElement).value,\n    );\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CountriesComponent', 'selector': 'app-countries'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CountriesService.html":{"url":"injectables/CountriesService.html","title":"injectable - CountriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CountriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/countries/countries.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                deleteItem\n                            \n                            \n                                getItem\n                            \n                            \n                                getItems\n                            \n                            \n                                    Private\n                                    Readonly\n                                httpClient\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    apiUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItems\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        httpClient\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/countries/countries.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        apiUrl\n                    \n                \n\n                \n                    \n                        getapiUrl()\n                    \n                \n                            \n                                \n                                    Defined in src/app/countries/countries.service.ts:11\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ServiceBase } from '../core/base/service.base';\nimport { CountryModel } from './countries.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CountriesService implements ServiceBase {\n  private readonly httpClient = inject(HttpClient);\n  get apiUrl() { return 'https://freetestapi.com/api/v1/countries'};\n\n  getItems = (): Observable => this.httpClient.get(this.apiUrl);\n  getItem = (id: string) => this.httpClient.get(`${this.apiUrl}/${id}`);\n  addItem = (value: CountryModel) => this.httpClient.post(this.apiUrl, { value });\n  updateItem = (value: CountryModel) => this.httpClient.put(`${this.apiUrl}/${value.id}`, value);\n  deleteItem = (value: CountryModel) => this.httpClient.delete(`${this.apiUrl}/${value.id}`);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountriesState.html":{"url":"interfaces/CountriesState.html","title":"interface - CountriesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CountriesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/countries/store/countries.store.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            StoreBaseState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { computed, inject } from '@angular/core';\nimport {\n  signalStore,\n  withComputed,\n  withHooks,\n  withMethods,\n  withState,\n} from '@ngrx/signals';\n\nimport { StoreBaseState, withStoreComputed, withStoreMethods } from '../../core/store';\nimport { CountryModel } from '../countries.model';\nimport { CountriesService } from '../countries.service';\n\nexport interface CountriesState extends StoreBaseState {\n  filter: { query: string; order: 'asc' | 'desc' };\n};\n\nconst initialState: CountriesState = {\n  items: [],\n  isloading: false,\n  filter: { query: '', order: 'asc' },\n};\n\nexport const CountriesStore = signalStore({ providedIn: 'root' },\n  withState(initialState),\n  withStoreComputed(),\n  withStoreMethods(CountriesService),\n\n  // Opcional/custom\n  withComputed(({ items, filter }) => ({\n    sorted: computed(() => {\n      const direction = filter.order() === 'asc' ? 1 : -1;\n      return items().toSorted((a: any, b: any) => direction * a.name.localeCompare(b.name));\n    }),\n  })),\n\n  // Opcional/custom\n  withMethods(((store, countriesService = inject(CountriesService)) => ({\n  }))),\n\n  // Opcional/custom\n  withHooks({\n    onInit({ getItems }) {\n      getItems();\n    },\n    onDestroy() {\n      console.log('on destroy');\n    },\n  })\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryModel.html":{"url":"interfaces/CountryModel.html","title":"interface - CountryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CountryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/countries/countries.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EntityBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            capital\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            density\n                                        \n                                \n                                \n                                        \n                                            flag\n                                        \n                                \n                                \n                                        \n                                            land_area\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            population\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        capital\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        capital:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        density\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        density:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flag\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        land_area\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        land_area:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        population\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        population:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityBase } from \"../core/base/entity.base\";\n\nexport interface CountryModel extends EntityBase {\n  name: string;\n  population: number;\n  land_area: number;\n  density: number;\n  capital: string;\n  currency: string;\n  flag: string;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeleteService.html":{"url":"interfaces/DeleteService.html","title":"interface - DeleteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DeleteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/base/service.base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        deleteItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteItem\n                        \n                    \n                \n            \n            \n                \ndeleteItem(value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/base/service.base.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface GetService {\n  getItems(): Observable;\n}\n\nexport interface GetByIdService {\n  getItem(id: string): Observable;\n}\n\nexport interface AddService {\n  addItem(value: T): Observable;\n}\n\nexport interface UpdateService {\n  updateItem(value: T): Observable;\n}\n\nexport interface DeleteService {\n  deleteItem(value: T): Observable;\n}\n\nexport interface ServiceBase extends GetService, AddService, UpdateService, DeleteService {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetByIdService.html":{"url":"interfaces/GetByIdService.html","title":"interface - GetByIdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetByIdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/base/service.base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/base/service.base.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface GetService {\n  getItems(): Observable;\n}\n\nexport interface GetByIdService {\n  getItem(id: string): Observable;\n}\n\nexport interface AddService {\n  addItem(value: T): Observable;\n}\n\nexport interface UpdateService {\n  updateItem(value: T): Observable;\n}\n\nexport interface DeleteService {\n  deleteItem(value: T): Observable;\n}\n\nexport interface ServiceBase extends GetService, AddService, UpdateService, DeleteService {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetService.html":{"url":"interfaces/GetService.html","title":"interface - GetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/base/service.base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getItems\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItems\n                        \n                    \n                \n            \n            \n                \ngetItems()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/base/service.base.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface GetService {\n  getItems(): Observable;\n}\n\nexport interface GetByIdService {\n  getItem(id: string): Observable;\n}\n\nexport interface AddService {\n  addItem(value: T): Observable;\n}\n\nexport interface UpdateService {\n  updateItem(value: T): Observable;\n}\n\nexport interface DeleteService {\n  deleteItem(value: T): Observable;\n}\n\nexport interface ServiceBase extends GetService, AddService, UpdateService, DeleteService {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceBase.html":{"url":"interfaces/ServiceBase.html","title":"interface - ServiceBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServiceBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/base/service.base.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            GetService\n                            AddService\n                            UpdateService\n                            DeleteService\n            \n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface GetService {\n  getItems(): Observable;\n}\n\nexport interface GetByIdService {\n  getItem(id: string): Observable;\n}\n\nexport interface AddService {\n  addItem(value: T): Observable;\n}\n\nexport interface UpdateService {\n  updateItem(value: T): Observable;\n}\n\nexport interface DeleteService {\n  deleteItem(value: T): Observable;\n}\n\nexport interface ServiceBase extends GetService, AddService, UpdateService, DeleteService {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateService.html":{"url":"interfaces/UpdateService.html","title":"interface - UpdateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/base/service.base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateItem\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateItem\n                        \n                    \n                \n            \n            \n                \nupdateItem(value: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/base/service.base.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nexport interface GetService {\n  getItems(): Observable;\n}\n\nexport interface GetByIdService {\n  getItem(id: string): Observable;\n}\n\nexport interface AddService {\n  addItem(value: T): Observable;\n}\n\nexport interface UpdateService {\n  updateItem(value: T): Observable;\n}\n\nexport interface DeleteService {\n  deleteItem(value: T): Observable;\n}\n\nexport interface ServiceBase extends GetService, AddService, UpdateService, DeleteService {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/base/service.base.ts\n            \n            interface\n            AddService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/base/service.base.ts\n            \n            interface\n            DeleteService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/base/service.base.ts\n            \n            interface\n            GetByIdService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/base/service.base.ts\n            \n            interface\n            GetService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/base/service.base.ts\n            \n            interface\n            ServiceBase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/base/service.base.ts\n            \n            interface\n            UpdateService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/mock/auto-mock.ts\n            \n            function\n            autoMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/mock/auto-mock.ts\n            \n            function\n            overrideMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/mock/auto-mock.ts\n            \n            function\n            provideMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/store.base.computed.ts\n            \n            variable\n            withStoreComputed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/store/store.base.methods.ts\n            \n            variable\n            withStoreMethods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/countries/countries.component.ts\n            \n            component\n            CountriesComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/countries/countries.model.ts\n            \n            interface\n            CountryModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/countries/countries.service.ts\n            \n            injectable\n            CountriesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/countries/store/countries.store.ts\n            \n            interface\n            CountriesState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/countries/store/countries.store.ts\n            \n            variable\n            CountriesStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/countries/store/countries.store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.1.1\n        \n            @angular/cdk : ^18.1.1\n        \n            @angular/common : ^18.1.1\n        \n            @angular/compiler : ^18.1.1\n        \n            @angular/core : ^18.1.1\n        \n            @angular/forms : ^18.1.1\n        \n            @angular/material : ^18.1.1\n        \n            @angular/platform-browser : ^18.1.1\n        \n            @angular/platform-browser-dynamic : ^18.1.1\n        \n            @angular/router : ^18.1.1\n        \n            @compodoc/compodoc : ^1.1.25\n        \n            @ngrx/operators : ^18.0.2\n        \n            @ngrx/signals : ^18.0.2\n        \n            @ngrx/store : ^18.0.2\n        \n            ag-grid-angular : ^32.2.1\n        \n            material-icons : ^1.13.12\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            autoMock   (src/.../auto-mock.ts)\n                        \n                        \n                            overrideMock   (src/.../auto-mock.ts)\n                        \n                        \n                            provideMock   (src/.../auto-mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/mock/auto-mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        autoMock\n                        \n                    \n                \n            \n            \n                \nautoMock(obj)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                obj\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overrideMock\n                        \n                    \n                \n            \n            \n                \noverrideMock(type)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        provideMock\n                        \n                    \n                \n            \n            \n                \nprovideMock(type)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Provider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EntityBase   (src/.../entity.base.ts)\n                        \n                        \n                            StoreBaseState   (src/.../store.base.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/base/entity.base.ts\n    \n    \n        \n            \n                \n                    \n                    EntityBase\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/store/store.base.state.ts\n    \n    \n        \n            \n                \n                    \n                    StoreBaseState\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            CountriesStore   (src/.../countries.store.ts)\n                        \n                        \n                            initialState   (src/.../countries.store.ts)\n                        \n                        \n                            withStoreComputed   (src/.../store.base.computed.ts)\n                        \n                        \n                            withStoreMethods   (src/.../store.base.methods.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/countries/store/countries.store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CountriesStore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signalStore({ providedIn: 'root' },\n  withState(initialState),\n  withStoreComputed(),\n  withStoreMethods(CountriesService),\n\n  // Opcional/custom\n  withComputed(({ items, filter }) => ({\n    sorted: computed(() => {\n      const direction = filter.order() === 'asc' ? 1 : -1;\n      return items().toSorted((a: any, b: any) => direction * a.name.localeCompare(b.name));\n    }),\n  })),\n\n  // Opcional/custom\n  withMethods(((store, countriesService = inject(CountriesService)) => ({\n  }))),\n\n  // Opcional/custom\n  withHooks({\n    onInit({ getItems }) {\n      getItems();\n    },\n    onDestroy() {\n      console.log('on destroy');\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CountriesState\n\n                    \n                \n                \n                    \n                        Default value : {\n  items: [],\n  isloading: false,\n  filter: { query: '', order: 'asc' },\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/store.base.computed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        withStoreComputed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  signalStoreFeature({ state: type>() },\n  withComputed(({ items }) => ({\n    count: computed(() => items().length),\n  })),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/store/store.base.methods.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        withStoreMethods\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  dataServiceType: Type>,\n) => signalStoreFeature({ state: type>() },\n  withMethods((store, service = inject(dataServiceType)) => ({\n\n    getItems: rxMethod(\n      pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        tap(() => patchState(store, { isloading: true })),\n        switchMap(() => {\n          return service.getItems().pipe(\n            tapResponse({\n              next: (items) => patchState(store, { items }),\n              error: console.error,\n              finalize: () => patchState(store, { isloading: false }),\n            })\n          );\n        })\n      )\n    ),\n\n    addItem: rxMethod(\n      switchMap((value) => {\n        patchState(store, { isloading: true });\n\n        return service.addItem(value).pipe(\n          tapResponse({\n            next: (addedItem) => {\n              patchState(store, {\n                items: [...store.items(), addedItem],\n              });\n            },\n            error: console.error,\n            finalize: () => patchState(store, { isloading: false }),\n          }),\n        );\n      }),\n    ),\n\n    updateItem: rxMethod(\n      switchMap((item) => {\n        patchState(store, { isloading: true });\n\n        return service.updateItem(item).pipe(\n          tapResponse({\n            next: (updatedItem) => {\n              const allItems = [...store.items()];\n              const index = allItems.findIndex((x) => x.id === item.id);\n              allItems[index] = updatedItem;\n              patchState(store, { items: allItems });\n            },\n            error: console.error,\n            finalize: () => patchState(store, { isloading: false }),\n          }),\n        );\n      }),\n    ),\n\n    deleteItem: rxMethod(\n      switchMap((item) => {\n        patchState(store, { isloading: true });\n\n        return service.deleteItem(item).pipe(\n          tapResponse({\n            next: () => {\n              patchState(store, {\n                items: [...store.items().filter((x) => x.id !== item.id)],\n              });\n            },\n            error: console.error,\n            finalize: () => patchState(store, { isloading: false }),\n          }),\n        );\n      }),\n    ),\n\n  })),\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
